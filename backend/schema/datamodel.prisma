scalar DateTime

type User {
  id: ID! @id
  tmcId: Int @unique
  hakaId: String @unique
  googleId: String @unique
  role: Role!
  deactivated: Boolean! @default(value: false)
  workspaceParticipations: [WorkspaceParticipant!]! @relation(name:"WorkspaceParticipantUser", onDelete: CASCADE)
  projectParticipations: [ProjectParticipant!]! @relation(name:"ProjectParticipantUser", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  lastActivity: DateTime
  seenGuides: [String!]! @scalarList(strategy:"RELATION")
}

enum Role {
  GUEST
  STUDENT
  STAFF
  ADMIN
}

enum Privilege {
  CLONE
  VIEW
  EDIT
  OWNER
}

type Project {
  id: ID! @id
  name: String!
  workspaces: [Workspace!]! @relation(name: "UserWorkspaces")
  activeTemplate: Workspace @relation(link: INLINE, name:"Template")
  templates: [Workspace!]! @relation(name:"Templates")
  merges: [Workspace!]! @relation(name:"Merges")
  participants: [ProjectParticipant!]! @relation(name: "ProjectParticipantProject", onDelete: CASCADE)
  tokens: [ProjectToken!]! @relation(name: "ProjectAccessToken", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
}

type Workspace {
  id: ID! @id
  name: String!
  sourceProject: Project @relation(name: "UserWorkspaces")
  sourceTemplate: Workspace @relation(name: "TemplateClones")
  asMerge: Project @relation(name:"Merges")
  asTemplate: Project @relation(name:"Templates")
  clones: [Workspace!]! @relation(name: "TemplateClones")
  courses: [Course!]! @relation(name:"WorkspaceCourses", onDelete: CASCADE)
  courseOrder: [ID!]! @scalarList(strategy:"RELATION")
  concepts: [Concept!]! @relation(name:"WorkspaceConcepts", onDelete: CASCADE)
  conceptLinks: [ConceptLink!]! @relation(name:"WorkspaceConceptLinks", onDelete: CASCADE)
  courseLinks: [CourseLink!]! @relation(name:"WorkspaceCourseLinks", onDelete: CASCADE)
  participants: [WorkspaceParticipant!]! @relation(name: "WorkspaceParticipantWorkspace", onDelete: CASCADE)
  tokens: [WorkspaceToken!]! @relation(name: "WorkspaceAccessToken", onDelete: CASCADE)
  mainCourse: Course @relation(link: INLINE, name: "MainCourse")
  pointGroups: [PointGroup!]! @relation(name: "WorkspacePointGroup")
  courseTags: [Tag!] @relation(name: "WorkspaceCourseTags")
  conceptTags: [Tag!] @relation(name: "WorkspaceConceptTags")
  createdAt: DateTime! @createdAt
}

type WorkspaceParticipant {
  id: ID! @id
  privilege: Privilege!
  workspace: Workspace! @relation(name:"WorkspaceParticipantWorkspace")
  token: WorkspaceToken @relation(name:"WorkspaceParticipationToken")
  user: User! @relation(name:"WorkspaceParticipantUser")
  createdAt: DateTime! @createdAt
}

type ProjectParticipant {
  id: ID! @id
  privilege: Privilege!
  project: Project! @relation(name:"ProjectParticipantProject")
  token: ProjectToken @relation(name:"ProjectParticipationToken")
  user: User! @relation(name:"ProjectParticipantUser")
  createdAt: DateTime! @createdAt
}

type WorkspaceToken {
  id: ID! @id
  privilege: Privilege!
  revoked: Boolean!
  workspace: Workspace! @relation(name: "WorkspaceAccessToken")
  participants: [WorkspaceParticipant!]! @relation(name:"WorkspaceParticipationToken", onDelete: CASCADE)
}

type ProjectToken {
  id: ID! @id
  privilege: Privilege!
  revoked: Boolean!
  project: Project! @relation(name: "ProjectAccessToken")
  participants: [ProjectParticipant!]! @relation(name:"ProjectParticipationToken", onDelete: CASCADE)
}

type CourseLink {
  id: ID! @id
  from: Course! @relation(link: INLINE, name: "FromCourse")
  to: Course! @relation(link: INLINE, name: "ToCourse")
  official: Boolean! @default(value: false)
  frozen: Boolean! @default(value: false)
  createdBy: User!
  workspace: Workspace! @relation(link: INLINE, name:"WorkspaceCourseLinks")
  weight: Int! @default(value: 100)
  count: Int! @default(value: 1)
  createdAt: DateTime! @createdAt
}

type Course {
  id: ID! @id
  name: String!
  official: Boolean! @default(value: false)
  frozen: Boolean! @default(value: false)
  createdBy: User!
  sourceCourse: Course @relation(name: "CourseClones")
  clones: [Course!]! @relation(name: "CourseClones")
  linksFromCourse: [CourseLink!]! @relation(name: "FromCourse", onDelete: CASCADE)
  linksToCourse: [CourseLink!]! @relation(name: "ToCourse", onDelete: CASCADE)
  concepts: [Concept!]! @relation(name:"ConceptCourses", onDelete: CASCADE)
  conceptOrder: [ID!]! @scalarList(strategy:"RELATION")
  workspace: Workspace! @relation(link: INLINE, name:"WorkspaceCourses")
  tags: [Tag!]!
  createdAt: DateTime! @createdAt
}

type ConceptLink {
  id: ID! @id
  from: Concept! @relation(link: INLINE, name: "FromConcept")
  to: Concept! @relation(link: INLINE, name: "ToConcept")
  official: Boolean! @default(value: false)
  frozen: Boolean! @default(value: false)
  workspace: Workspace! @relation(link: INLINE, name:"WorkspaceConceptLinks")
  createdBy: User!
  weight: Int! @default(value: 100)
  count: Int! @default(value: 1)
  createdAt: DateTime! @createdAt
}

type Concept {
  id: ID! @id
  name: String!
  description: String
  official: Boolean! @default(value: false)
  frozen: Boolean! @default(value: false)
  createdBy: User!
  sourceConcept: Concept @relation(name: "ConceptClones")
  clones: [Concept!]! @relation(name: "ConceptClones")
  linksFromConcept: [ConceptLink!]! @relation(name: "FromConcept", onDelete: CASCADE)
  linksToConcept: [ConceptLink!]! @relation(name: "ToConcept", onDelete: CASCADE)
  course: Course! @relation(name: "ConceptCourses")
  resources: [Resource!]!
  workspace: Workspace! @relation(link: INLINE, name:"WorkspaceConcepts")
  tags: [Tag!]!
  count: Int! @default(value: 1)
  createdAt: DateTime! @createdAt
}

type PointGroup {
  id: ID! @id
  name: String!
  startDate: DateTime!
  endDate: DateTime!
  maxPoints: Int! @default(value: 1)
  workspace: Workspace! @relation(name: "WorkspacePointGroup")
  course: Course! @relation(link: INLINE, name: "CoursePointGroup")
  pointsPerConcept: Float! @default(value: 0.5)
  completions: [Completion!]! @relation(name: "PointGroupCompletions", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
}

type Completion {
  id: ID! @id
  user: User!
  conceptAmount: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
  pointGroup: PointGroup! @relation(name: "PointGroupCompletions")
  createdAt: DateTime! @createdAt
}

type Tag {
  id: ID! @id
  name: String!
  type: String! @default(value: "custom")
  priority: Int! @default(value: 0)
  createdAt: DateTime! @createdAt
}

type Resource {
  id: ID! @id
  concept: Concept!
  name: String!
  description: String!
  urls: [URL!]!
}

type URL {
  id: ID! @id
  address: String!
  resource: Resource!
}
