scalar DateTime

type Query {
  allConcepts: [Concept!]!
  conceptById(id: ID!): Concept
}

type Mutation {
  createConcept(name: String!, desc: String, official: Boolean): Concept
  deleteConcept(id: ID!): Concept
}

# type User {
#   id: ID!
#   username: String!
# }

# type Course {
#   id: ID!
#   name: String!
#   instances: [Instance!]!
# }

# type Instance {
#   id: ID!
#   start_date: DateTime!
#   end_date: DateTime!
#   period: [Int!]!
#   course: Course!
# }

type Concept {
  id: ID!
  name: String!
  description: String
  official: Boolean!
  links: [Link!]!
}

type Link {
  id: ID!
  from: Concept!
  to: Concept!
  # user: User!
  official: Boolean!
}